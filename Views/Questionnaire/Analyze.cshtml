@model IEnumerable<CPSC571Project6.Models.ChartDataClass>

@{
    ViewData["Title"] ="Analysis of " + @ViewBag.title;
}

<div>
    <a asp-controller="Questionnaire" asp-action="Index" asp-route-id="@ViewBag.topic_id">Back to Questionnaires</a>
</div>

<h1>@ViewBag.title</h1>
<p align="center">
        
    <u>@ViewBag.taken_Count users have taken this Questionnaire</u>

</p>

<html>
<body>


    @for (int i = 0; i < Model.Count(); i++)
    {
        <div>
            @(i+1).) @Html.DisplayFor(modelItem => Model.ToList()[i].question)
            <div id=@i style="width: 900px; height: 500px"></div>
        </div>

    }

    <h2>Apriori Analysis: Rule Based Association</h2>
    <p>
        Value 1 is Poor |
        Value 2 is Not Well |
        Value 3 is Moderate |
        Value 4 is Well |
        Value 5 is Excellent |
    </p>

    @for (int i = 0; i < @ViewBag.ap.EachLevelOfNodes.Count; i++)
    {
        <table class="table table-bordered" align="center">
            <thead align="center">
                <tr>
                    <th>
                        Table @(i+1): Itemset
                    </th>
                </tr>
            </thead>
            <tbody align="center">
                @foreach (var node in @ViewBag.ap.EachLevelOfNodes[i])
                {
                    <tr>
                        <td>
                            @node.ToDetailedString(@ViewBag.ap.Data);
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <h2>Rules</h2>
    @if (ViewBag.ap.Rules != null)
    {
        <table class="table table-bordered" align="center">
            <thead align="center">
                <tr>
                    <th>
                        Rule
                    </th>
                    <th>
                        Confidence
                    </th>
                </tr>
            </thead>
            <tbody align="center">
                @foreach (var rules in ViewBag.Rules)
                {
                    <tr>
                        <td>
                            @rules.ToDetailedString(@ViewBag.ap.Data).Split(" || ")[0]
                        </td>
                        <td>
                            @rules.ToDetailedString(@ViewBag.ap.Data).Split(" || ")[1].Split(",")[0].Split(": ")[1]
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    }

    <form method="post">
        <center style="display: inline-block; text-align: left;">

                
            <div class="form-group">
                <label>Support</label>
                <input name ="sp" class="form-control" type="number" step=".05" min="0" max="1" value="@ViewBag.sp"/>
                <span class="text-danger"></span>
            </div>


            <div class="form-group">
                <label>Confidence</label>
                <input name ="conf" class="form-control" type="number" step=".05" min="0" max="1" value="@ViewBag.cf"/>
                <span class="text-danger"></span>
            </div>



            <button type="submit" class="btn btn-primary">Re-Analyze</button>
        </center>
    </form>
</body>



<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        function drawChart() {
            var chartData = @Html.Raw(Json.Serialize(Model));

            for (i = 0; i < chartData.length; i++) {
                var data = google.visualization.arrayToDataTable([
                    ['Answer', 'Count'],
                    ['Poor (1)', chartData[i].value_1_count],
                    ['Not well (2)', chartData[i].value_2_count],
                    ['Moderate (3)', chartData[i].value_3_count],
                    ['Well (4)', chartData[i].value_4_count],
                    ['Excellent (5)', chartData[i].value_5_count]
                ]);

                var options = {
                    title: '',
                    cruveType: 'function',
                    legend: { position: 'bottom' }
                }

                var chart = new google.visualization.PieChart(document.getElementById(i));
                chart.draw(data, options);
            }
        }
</script>

</html>
